---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation template for microservies being deployed'
Parameters:
  ContainerRepository:
    Description: Repository for getting the container
    Type: String
  ContainerName:
    Description: Name for container used in various places
    Type: String
  ContainerTag:
    Description: Container tag being deployed
    Type: String
  DesiredCount:
    Description: Number of tasks to deploy
    Type: Number
    Default: 1
  ListenerPriority:
    Description: The priority of the path
    Type: String
  LZStackPrefix:
    Description: Stack prefix to read parameters from landing zone stack
    Type: String
  ListenerPath:
    Description: Path for ECS listener without leading and trailing '/'
    Type: String
  TaskIamRoleArn:
    Description: ARN for IAM role to use for the task
    Type: String
    Default: ""
  LaunchType:
    Description: To specify the launch type for ecs service. By default is Fargate and allowed values are EC2 and Fargate.
    Type: String
    Default: Fargate
    AllowedValues:
      - Fargate
      - EC2

Conditions:
  TaskHasNoIamRole:
    !Equals
      - !Ref TaskIamRoleArn
      - ""
  Fargate: !Equals [ !Ref LaunchType, "Fargate" ]
  EC2: !Equals [ !Ref LaunchType, "EC2" ]
Resources:
  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      VpcId:
        Fn::ImportValue: !Sub ${LZStackPrefix}-VpcId
      Port: 80
      Protocol: HTTP

  ListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      ListenerArn:
        Fn::ImportValue: !Sub ${LZStackPrefix}-lb-listener
      Priority: !Ref ListenerPriority
      Conditions:
        - Field: path-pattern
          Values:
            - !Sub /${ListenerPath}/
      Actions:
        - TargetGroupArn: !Ref TargetGroup
          Type: forward

  TaskExecutionRole:
      Type: AWS::IAM::Role
      Properties:
        Path: /
        AssumeRolePolicyDocument:
          Version: 2012-10-17
          Statement:
            - Action: sts:AssumeRole
              Effect: Allow
              Principal:
                Service: ecs-tasks.amazonaws.com
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy


  Service:
    Type: AWS::ECS::Service
    DependsOn: ListenerRule
    Properties:
      Cluster:
        Fn::ImportValue: !Sub ${LZStackPrefix}-cluster-name
      Role:
        Fn::ImportValue: !Sub ${LZStackPrefix}-ecs-service-role
      DesiredCount: !Ref DesiredCount
      TaskDefinition: !Ref TaskDefinition
      LaunchType: !If [ Fargate, "FARGATE", "EC2" ]
      NetworkConfiguration:
        Fn::If:
          - Fargate
          - AwsvpcConfiguration:
              AssignPublicIp: ENABLED
              SecurityGroups:
                - Fn::ImportValue:
                   !Sub ${LZStackPrefix}-ecs-security-group
                - Fn::ImportValue:
                   !Sub ${LZStackPrefix}-alb-security-group
              Subnets:
                - Fn::ImportValue:
                   !Sub ${LZStackPrefix}-Private-Subnet-0
                - Fn::ImportValue:
                   !Sub ${LZStackPrefix}-Private-Subnet-1
          - !Ref AWS::NoValue
      LoadBalancers:
         - ContainerName: !Ref ContainerName
           ContainerPort: 80
           TargetGroupArn: !Ref TargetGroup


  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Ref ContainerName
      TaskRoleArn:
        Fn::If:
          - TaskHasNoIamRole
          - !Ref AWS::NoValue
          - !Ref TaskIamRoleArn
      NetworkMode: !If [ Fargate, "awsvpc", "bridge" ]
      Cpu: 256
      Memory: 512
      ExecutionRoleArn: !Ref TaskExecutionRole
      RequiresCompatibilities:
           - !If [ Fargate, "FARGATE", "EC2" ]
      ContainerDefinitions:
        - Name: !Ref ContainerName
          Image: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ContainerRepository}:${ContainerTag}
          Essential: true
          Memory: 128
          PortMappings:
            - ContainerPort: 80
          Environment:
            - Name: SERVICE_PATH
              Value: !Ref ListenerPath
            - Name: RESOURCE_BUCKET
              Value:
                Fn::ImportValue: !Sub ${LZStackPrefix}-service-resource-bucket
            - Name: RESOURCE_BUCKET_PATH
              Value: !Sub /service/${ContainerName}/
            - Name: LINK_SERVER_NAME
              Value:
                Fn::ImportValue: !Sub ${LZStackPrefix}-lb-dns
          Cpu: 10

